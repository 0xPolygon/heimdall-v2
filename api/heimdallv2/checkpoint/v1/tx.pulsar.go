// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package checkpointv1

import (
	fmt "fmt"
	types "github.com/0xPolygon/heimdall-v2/api/heimdallv2/types"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgCheckpointAdjust              protoreflect.MessageDescriptor
	fd_MsgCheckpointAdjust_header_index protoreflect.FieldDescriptor
	fd_MsgCheckpointAdjust_proposer     protoreflect.FieldDescriptor
	fd_MsgCheckpointAdjust_from         protoreflect.FieldDescriptor
	fd_MsgCheckpointAdjust_start_block  protoreflect.FieldDescriptor
	fd_MsgCheckpointAdjust_end_block    protoreflect.FieldDescriptor
	fd_MsgCheckpointAdjust_root_hash    protoreflect.FieldDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointAdjust = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointAdjust")
	fd_MsgCheckpointAdjust_header_index = md_MsgCheckpointAdjust.Fields().ByName("header_index")
	fd_MsgCheckpointAdjust_proposer = md_MsgCheckpointAdjust.Fields().ByName("proposer")
	fd_MsgCheckpointAdjust_from = md_MsgCheckpointAdjust.Fields().ByName("from")
	fd_MsgCheckpointAdjust_start_block = md_MsgCheckpointAdjust.Fields().ByName("start_block")
	fd_MsgCheckpointAdjust_end_block = md_MsgCheckpointAdjust.Fields().ByName("end_block")
	fd_MsgCheckpointAdjust_root_hash = md_MsgCheckpointAdjust.Fields().ByName("root_hash")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointAdjust)(nil)

type fastReflection_MsgCheckpointAdjust MsgCheckpointAdjust

func (x *MsgCheckpointAdjust) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAdjust)(x)
}

func (x *MsgCheckpointAdjust) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointAdjust_messageType fastReflection_MsgCheckpointAdjust_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointAdjust_messageType{}

type fastReflection_MsgCheckpointAdjust_messageType struct{}

func (x fastReflection_MsgCheckpointAdjust_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAdjust)(nil)
}
func (x fastReflection_MsgCheckpointAdjust_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAdjust)
}
func (x fastReflection_MsgCheckpointAdjust_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAdjust
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointAdjust) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAdjust
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointAdjust) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointAdjust_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointAdjust) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAdjust)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointAdjust) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointAdjust)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointAdjust) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.HeaderIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.HeaderIndex)
		if !f(fd_MsgCheckpointAdjust_header_index, value) {
			return
		}
	}
	if x.Proposer != "" {
		value := protoreflect.ValueOfString(x.Proposer)
		if !f(fd_MsgCheckpointAdjust_proposer, value) {
			return
		}
	}
	if x.From != "" {
		value := protoreflect.ValueOfString(x.From)
		if !f(fd_MsgCheckpointAdjust_from, value) {
			return
		}
	}
	if x.StartBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartBlock)
		if !f(fd_MsgCheckpointAdjust_start_block, value) {
			return
		}
	}
	if x.EndBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndBlock)
		if !f(fd_MsgCheckpointAdjust_end_block, value) {
			return
		}
	}
	if x.RootHash != nil {
		value := protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
		if !f(fd_MsgCheckpointAdjust_root_hash, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointAdjust) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		return x.HeaderIndex != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		return x.Proposer != ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		return x.From != ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		return x.StartBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		return x.EndBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		return x.RootHash != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjust) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		x.HeaderIndex = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		x.Proposer = ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		x.From = ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		x.StartBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		x.EndBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		x.RootHash = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointAdjust) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		value := x.HeaderIndex
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		value := x.Proposer
		return protoreflect.ValueOfString(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		value := x.From
		return protoreflect.ValueOfString(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		value := x.StartBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		value := x.EndBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		value := x.RootHash
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjust) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		x.HeaderIndex = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		x.Proposer = value.Interface().(string)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		x.From = value.Interface().(string)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		x.StartBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		x.EndBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		x.RootHash = value.Message().Interface().(*types.HeimdallHash)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjust) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		if x.RootHash == nil {
			x.RootHash = new(types.HeimdallHash)
		}
		return protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		panic(fmt.Errorf("field header_index of message heimdallv2.checkpoint.v1.MsgCheckpointAdjust is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		panic(fmt.Errorf("field proposer of message heimdallv2.checkpoint.v1.MsgCheckpointAdjust is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		panic(fmt.Errorf("field from of message heimdallv2.checkpoint.v1.MsgCheckpointAdjust is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		panic(fmt.Errorf("field start_block of message heimdallv2.checkpoint.v1.MsgCheckpointAdjust is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		panic(fmt.Errorf("field end_block of message heimdallv2.checkpoint.v1.MsgCheckpointAdjust is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointAdjust) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.header_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.proposer":
		return protoreflect.ValueOfString("")
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.from":
		return protoreflect.ValueOfString("")
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.start_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.end_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash":
		m := new(types.HeimdallHash)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjust"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjust does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointAdjust) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointAdjust", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointAdjust) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjust) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointAdjust) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointAdjust) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointAdjust)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.HeaderIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.HeaderIndex))
		}
		l = len(x.Proposer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.From)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.StartBlock))
		}
		if x.EndBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.EndBlock))
		}
		if x.RootHash != nil {
			l = options.Size(x.RootHash)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAdjust)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.RootHash != nil {
			encoded, err := options.Marshal(x.RootHash)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.EndBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndBlock))
			i--
			dAtA[i] = 0x28
		}
		if x.StartBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartBlock))
			i--
			dAtA[i] = 0x20
		}
		if len(x.From) > 0 {
			i -= len(x.From)
			copy(dAtA[i:], x.From)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.From)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Proposer) > 0 {
			i -= len(x.Proposer)
			copy(dAtA[i:], x.Proposer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proposer)))
			i--
			dAtA[i] = 0x12
		}
		if x.HeaderIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.HeaderIndex))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAdjust)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAdjust: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAdjust: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HeaderIndex", wireType)
				}
				x.HeaderIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.HeaderIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proposer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.From = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
				}
				x.StartBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
				}
				x.EndBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RootHash == nil {
					x.RootHash = &types.HeimdallHash{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RootHash); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointAdjustResponse protoreflect.MessageDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointAdjustResponse = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointAdjustResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointAdjustResponse)(nil)

type fastReflection_MsgCheckpointAdjustResponse MsgCheckpointAdjustResponse

func (x *MsgCheckpointAdjustResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAdjustResponse)(x)
}

func (x *MsgCheckpointAdjustResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointAdjustResponse_messageType fastReflection_MsgCheckpointAdjustResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointAdjustResponse_messageType{}

type fastReflection_MsgCheckpointAdjustResponse_messageType struct{}

func (x fastReflection_MsgCheckpointAdjustResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAdjustResponse)(nil)
}
func (x fastReflection_MsgCheckpointAdjustResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAdjustResponse)
}
func (x fastReflection_MsgCheckpointAdjustResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAdjustResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointAdjustResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAdjustResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointAdjustResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointAdjustResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointAdjustResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAdjustResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointAdjustResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointAdjustResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointAdjustResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointAdjustResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjustResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointAdjustResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjustResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjustResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointAdjustResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointAdjustResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointAdjustResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAdjustResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointAdjustResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointAdjustResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointAdjustResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAdjustResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAdjustResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAdjustResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAdjustResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpoint                   protoreflect.MessageDescriptor
	fd_MsgCheckpoint_proposer          protoreflect.FieldDescriptor
	fd_MsgCheckpoint_start_block       protoreflect.FieldDescriptor
	fd_MsgCheckpoint_end_block         protoreflect.FieldDescriptor
	fd_MsgCheckpoint_root_hash         protoreflect.FieldDescriptor
	fd_MsgCheckpoint_account_root_hash protoreflect.FieldDescriptor
	fd_MsgCheckpoint_bor_chain_i_d     protoreflect.FieldDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpoint = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpoint")
	fd_MsgCheckpoint_proposer = md_MsgCheckpoint.Fields().ByName("proposer")
	fd_MsgCheckpoint_start_block = md_MsgCheckpoint.Fields().ByName("start_block")
	fd_MsgCheckpoint_end_block = md_MsgCheckpoint.Fields().ByName("end_block")
	fd_MsgCheckpoint_root_hash = md_MsgCheckpoint.Fields().ByName("root_hash")
	fd_MsgCheckpoint_account_root_hash = md_MsgCheckpoint.Fields().ByName("account_root_hash")
	fd_MsgCheckpoint_bor_chain_i_d = md_MsgCheckpoint.Fields().ByName("bor_chain_i_d")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpoint)(nil)

type fastReflection_MsgCheckpoint MsgCheckpoint

func (x *MsgCheckpoint) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpoint)(x)
}

func (x *MsgCheckpoint) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpoint_messageType fastReflection_MsgCheckpoint_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpoint_messageType{}

type fastReflection_MsgCheckpoint_messageType struct{}

func (x fastReflection_MsgCheckpoint_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpoint)(nil)
}
func (x fastReflection_MsgCheckpoint_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpoint)
}
func (x fastReflection_MsgCheckpoint_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpoint
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpoint) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpoint
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpoint) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpoint_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpoint) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpoint)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpoint) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpoint)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpoint) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Proposer != "" {
		value := protoreflect.ValueOfString(x.Proposer)
		if !f(fd_MsgCheckpoint_proposer, value) {
			return
		}
	}
	if x.StartBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartBlock)
		if !f(fd_MsgCheckpoint_start_block, value) {
			return
		}
	}
	if x.EndBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndBlock)
		if !f(fd_MsgCheckpoint_end_block, value) {
			return
		}
	}
	if x.RootHash != nil {
		value := protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
		if !f(fd_MsgCheckpoint_root_hash, value) {
			return
		}
	}
	if x.AccountRootHash != nil {
		value := protoreflect.ValueOfMessage(x.AccountRootHash.ProtoReflect())
		if !f(fd_MsgCheckpoint_account_root_hash, value) {
			return
		}
	}
	if x.BorChainID != "" {
		value := protoreflect.ValueOfString(x.BorChainID)
		if !f(fd_MsgCheckpoint_bor_chain_i_d, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpoint) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		return x.Proposer != ""
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		return x.StartBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		return x.EndBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		return x.RootHash != nil
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		return x.AccountRootHash != nil
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		return x.BorChainID != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpoint) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		x.Proposer = ""
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		x.StartBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		x.EndBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		x.RootHash = nil
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		x.AccountRootHash = nil
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		x.BorChainID = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpoint) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		value := x.Proposer
		return protoreflect.ValueOfString(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		value := x.StartBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		value := x.EndBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		value := x.RootHash
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		value := x.AccountRootHash
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		value := x.BorChainID
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpoint) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		x.Proposer = value.Interface().(string)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		x.StartBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		x.EndBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		x.RootHash = value.Message().Interface().(*types.HeimdallHash)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		x.AccountRootHash = value.Message().Interface().(*types.HeimdallHash)
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		x.BorChainID = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpoint) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		if x.RootHash == nil {
			x.RootHash = new(types.HeimdallHash)
		}
		return protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		if x.AccountRootHash == nil {
			x.AccountRootHash = new(types.HeimdallHash)
		}
		return protoreflect.ValueOfMessage(x.AccountRootHash.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		panic(fmt.Errorf("field proposer of message heimdallv2.checkpoint.v1.MsgCheckpoint is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		panic(fmt.Errorf("field start_block of message heimdallv2.checkpoint.v1.MsgCheckpoint is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		panic(fmt.Errorf("field end_block of message heimdallv2.checkpoint.v1.MsgCheckpoint is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		panic(fmt.Errorf("field bor_chain_i_d of message heimdallv2.checkpoint.v1.MsgCheckpoint is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpoint) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.proposer":
		return protoreflect.ValueOfString("")
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.start_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.end_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash":
		m := new(types.HeimdallHash)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash":
		m := new(types.HeimdallHash)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpoint.bor_chain_i_d":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpoint"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpoint does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpoint) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpoint", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpoint) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpoint) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpoint) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpoint) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpoint)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Proposer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.StartBlock))
		}
		if x.EndBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.EndBlock))
		}
		if x.RootHash != nil {
			l = options.Size(x.RootHash)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.AccountRootHash != nil {
			l = options.Size(x.AccountRootHash)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BorChainID)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpoint)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.BorChainID) > 0 {
			i -= len(x.BorChainID)
			copy(dAtA[i:], x.BorChainID)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BorChainID)))
			i--
			dAtA[i] = 0x32
		}
		if x.AccountRootHash != nil {
			encoded, err := options.Marshal(x.AccountRootHash)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x2a
		}
		if x.RootHash != nil {
			encoded, err := options.Marshal(x.RootHash)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.EndBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndBlock))
			i--
			dAtA[i] = 0x18
		}
		if x.StartBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartBlock))
			i--
			dAtA[i] = 0x10
		}
		if len(x.Proposer) > 0 {
			i -= len(x.Proposer)
			copy(dAtA[i:], x.Proposer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proposer)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpoint)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpoint: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpoint: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proposer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
				}
				x.StartBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
				}
				x.EndBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RootHash == nil {
					x.RootHash = &types.HeimdallHash{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RootHash); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field AccountRootHash", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.AccountRootHash == nil {
					x.AccountRootHash = &types.HeimdallHash{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.AccountRootHash); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BorChainID", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BorChainID = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointResponse protoreflect.MessageDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointResponse = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointResponse)(nil)

type fastReflection_MsgCheckpointResponse MsgCheckpointResponse

func (x *MsgCheckpointResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointResponse)(x)
}

func (x *MsgCheckpointResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointResponse_messageType fastReflection_MsgCheckpointResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointResponse_messageType{}

type fastReflection_MsgCheckpointResponse_messageType struct{}

func (x fastReflection_MsgCheckpointResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointResponse)(nil)
}
func (x fastReflection_MsgCheckpointResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointResponse)
}
func (x fastReflection_MsgCheckpointResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointAck             protoreflect.MessageDescriptor
	fd_MsgCheckpointAck_from        protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_number      protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_proposer    protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_start_block protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_end_block   protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_root_hash   protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_tx_hash     protoreflect.FieldDescriptor
	fd_MsgCheckpointAck_log_index   protoreflect.FieldDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointAck = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointAck")
	fd_MsgCheckpointAck_from = md_MsgCheckpointAck.Fields().ByName("from")
	fd_MsgCheckpointAck_number = md_MsgCheckpointAck.Fields().ByName("number")
	fd_MsgCheckpointAck_proposer = md_MsgCheckpointAck.Fields().ByName("proposer")
	fd_MsgCheckpointAck_start_block = md_MsgCheckpointAck.Fields().ByName("start_block")
	fd_MsgCheckpointAck_end_block = md_MsgCheckpointAck.Fields().ByName("end_block")
	fd_MsgCheckpointAck_root_hash = md_MsgCheckpointAck.Fields().ByName("root_hash")
	fd_MsgCheckpointAck_tx_hash = md_MsgCheckpointAck.Fields().ByName("tx_hash")
	fd_MsgCheckpointAck_log_index = md_MsgCheckpointAck.Fields().ByName("log_index")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointAck)(nil)

type fastReflection_MsgCheckpointAck MsgCheckpointAck

func (x *MsgCheckpointAck) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAck)(x)
}

func (x *MsgCheckpointAck) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointAck_messageType fastReflection_MsgCheckpointAck_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointAck_messageType{}

type fastReflection_MsgCheckpointAck_messageType struct{}

func (x fastReflection_MsgCheckpointAck_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAck)(nil)
}
func (x fastReflection_MsgCheckpointAck_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAck)
}
func (x fastReflection_MsgCheckpointAck_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAck
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointAck) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAck
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointAck) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointAck_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointAck) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAck)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointAck) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointAck)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointAck) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.From != "" {
		value := protoreflect.ValueOfString(x.From)
		if !f(fd_MsgCheckpointAck_from, value) {
			return
		}
	}
	if x.Number != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Number)
		if !f(fd_MsgCheckpointAck_number, value) {
			return
		}
	}
	if x.Proposer != "" {
		value := protoreflect.ValueOfString(x.Proposer)
		if !f(fd_MsgCheckpointAck_proposer, value) {
			return
		}
	}
	if x.StartBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.StartBlock)
		if !f(fd_MsgCheckpointAck_start_block, value) {
			return
		}
	}
	if x.EndBlock != uint64(0) {
		value := protoreflect.ValueOfUint64(x.EndBlock)
		if !f(fd_MsgCheckpointAck_end_block, value) {
			return
		}
	}
	if x.RootHash != nil {
		value := protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
		if !f(fd_MsgCheckpointAck_root_hash, value) {
			return
		}
	}
	if x.TxHash != nil {
		value := protoreflect.ValueOfMessage(x.TxHash.ProtoReflect())
		if !f(fd_MsgCheckpointAck_tx_hash, value) {
			return
		}
	}
	if x.LogIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.LogIndex)
		if !f(fd_MsgCheckpointAck_log_index, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointAck) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		return x.From != ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		return x.Number != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		return x.Proposer != ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		return x.StartBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		return x.EndBlock != uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		return x.RootHash != nil
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		return x.TxHash != nil
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		return x.LogIndex != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAck) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		x.From = ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		x.Number = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		x.Proposer = ""
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		x.StartBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		x.EndBlock = uint64(0)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		x.RootHash = nil
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		x.TxHash = nil
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		x.LogIndex = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointAck) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		value := x.From
		return protoreflect.ValueOfString(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		value := x.Number
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		value := x.Proposer
		return protoreflect.ValueOfString(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		value := x.StartBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		value := x.EndBlock
		return protoreflect.ValueOfUint64(value)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		value := x.RootHash
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		value := x.TxHash
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		value := x.LogIndex
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAck) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		x.From = value.Interface().(string)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		x.Number = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		x.Proposer = value.Interface().(string)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		x.StartBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		x.EndBlock = value.Uint()
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		x.RootHash = value.Message().Interface().(*types.HeimdallHash)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		x.TxHash = value.Message().Interface().(*types.HeimdallHash)
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		x.LogIndex = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAck) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		if x.RootHash == nil {
			x.RootHash = new(types.HeimdallHash)
		}
		return protoreflect.ValueOfMessage(x.RootHash.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		if x.TxHash == nil {
			x.TxHash = new(types.HeimdallHash)
		}
		return protoreflect.ValueOfMessage(x.TxHash.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		panic(fmt.Errorf("field from of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		panic(fmt.Errorf("field number of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		panic(fmt.Errorf("field proposer of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		panic(fmt.Errorf("field start_block of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		panic(fmt.Errorf("field end_block of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		panic(fmt.Errorf("field log_index of message heimdallv2.checkpoint.v1.MsgCheckpointAck is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointAck) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.from":
		return protoreflect.ValueOfString("")
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.number":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.proposer":
		return protoreflect.ValueOfString("")
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.start_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.end_block":
		return protoreflect.ValueOfUint64(uint64(0))
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash":
		m := new(types.HeimdallHash)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash":
		m := new(types.HeimdallHash)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "heimdallv2.checkpoint.v1.MsgCheckpointAck.log_index":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAck does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointAck) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointAck", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointAck) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAck) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointAck) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointAck) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointAck)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.From)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Number != 0 {
			n += 1 + runtime.Sov(uint64(x.Number))
		}
		l = len(x.Proposer)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StartBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.StartBlock))
		}
		if x.EndBlock != 0 {
			n += 1 + runtime.Sov(uint64(x.EndBlock))
		}
		if x.RootHash != nil {
			l = options.Size(x.RootHash)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TxHash != nil {
			l = options.Size(x.TxHash)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.LogIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.LogIndex))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAck)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.LogIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.LogIndex))
			i--
			dAtA[i] = 0x40
		}
		if x.TxHash != nil {
			encoded, err := options.Marshal(x.TxHash)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if x.RootHash != nil {
			encoded, err := options.Marshal(x.RootHash)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x32
		}
		if x.EndBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.EndBlock))
			i--
			dAtA[i] = 0x28
		}
		if x.StartBlock != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StartBlock))
			i--
			dAtA[i] = 0x20
		}
		if len(x.Proposer) > 0 {
			i -= len(x.Proposer)
			copy(dAtA[i:], x.Proposer)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Proposer)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Number != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Number))
			i--
			dAtA[i] = 0x10
		}
		if len(x.From) > 0 {
			i -= len(x.From)
			copy(dAtA[i:], x.From)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.From)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAck)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAck: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAck: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.From = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Number", wireType)
				}
				x.Number = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Number |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Proposer = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
				}
				x.StartBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StartBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
				}
				x.EndBlock = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.EndBlock |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.RootHash == nil {
					x.RootHash = &types.HeimdallHash{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.RootHash); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TxHash", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TxHash == nil {
					x.TxHash = &types.HeimdallHash{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TxHash); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field LogIndex", wireType)
				}
				x.LogIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.LogIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointAckResponse protoreflect.MessageDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointAckResponse = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointAckResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointAckResponse)(nil)

type fastReflection_MsgCheckpointAckResponse MsgCheckpointAckResponse

func (x *MsgCheckpointAckResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAckResponse)(x)
}

func (x *MsgCheckpointAckResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointAckResponse_messageType fastReflection_MsgCheckpointAckResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointAckResponse_messageType{}

type fastReflection_MsgCheckpointAckResponse_messageType struct{}

func (x fastReflection_MsgCheckpointAckResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointAckResponse)(nil)
}
func (x fastReflection_MsgCheckpointAckResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAckResponse)
}
func (x fastReflection_MsgCheckpointAckResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAckResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointAckResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointAckResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointAckResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointAckResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointAckResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointAckResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointAckResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointAckResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointAckResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointAckResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAckResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointAckResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAckResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAckResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointAckResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointAckResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointAckResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointAckResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointAckResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointAckResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointAckResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointAckResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointAckResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAckResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointAckResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAckResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointAckResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointNoAck      protoreflect.MessageDescriptor
	fd_MsgCheckpointNoAck_from protoreflect.FieldDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointNoAck = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointNoAck")
	fd_MsgCheckpointNoAck_from = md_MsgCheckpointNoAck.Fields().ByName("from")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointNoAck)(nil)

type fastReflection_MsgCheckpointNoAck MsgCheckpointNoAck

func (x *MsgCheckpointNoAck) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointNoAck)(x)
}

func (x *MsgCheckpointNoAck) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointNoAck_messageType fastReflection_MsgCheckpointNoAck_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointNoAck_messageType{}

type fastReflection_MsgCheckpointNoAck_messageType struct{}

func (x fastReflection_MsgCheckpointNoAck_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointNoAck)(nil)
}
func (x fastReflection_MsgCheckpointNoAck_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointNoAck)
}
func (x fastReflection_MsgCheckpointNoAck_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointNoAck
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointNoAck) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointNoAck
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointNoAck) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointNoAck_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointNoAck) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointNoAck)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointNoAck) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointNoAck)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointNoAck) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.From != "" {
		value := protoreflect.ValueOfString(x.From)
		if !f(fd_MsgCheckpointNoAck_from, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointNoAck) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		return x.From != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAck) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		x.From = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointNoAck) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		value := x.From
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAck) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		x.From = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAck) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		panic(fmt.Errorf("field from of message heimdallv2.checkpoint.v1.MsgCheckpointNoAck is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointNoAck) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "heimdallv2.checkpoint.v1.MsgCheckpointNoAck.from":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAck"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAck does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointNoAck) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointNoAck", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointNoAck) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAck) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointNoAck) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointNoAck) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointNoAck)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.From)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointNoAck)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.From) > 0 {
			i -= len(x.From)
			copy(dAtA[i:], x.From)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.From)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointNoAck)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointNoAck: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointNoAck: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.From = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCheckpointNoAckResponse protoreflect.MessageDescriptor
)

func init() {
	file_heimdallv2_checkpoint_v1_tx_proto_init()
	md_MsgCheckpointNoAckResponse = File_heimdallv2_checkpoint_v1_tx_proto.Messages().ByName("MsgCheckpointNoAckResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCheckpointNoAckResponse)(nil)

type fastReflection_MsgCheckpointNoAckResponse MsgCheckpointNoAckResponse

func (x *MsgCheckpointNoAckResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCheckpointNoAckResponse)(x)
}

func (x *MsgCheckpointNoAckResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCheckpointNoAckResponse_messageType fastReflection_MsgCheckpointNoAckResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCheckpointNoAckResponse_messageType{}

type fastReflection_MsgCheckpointNoAckResponse_messageType struct{}

func (x fastReflection_MsgCheckpointNoAckResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCheckpointNoAckResponse)(nil)
}
func (x fastReflection_MsgCheckpointNoAckResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointNoAckResponse)
}
func (x fastReflection_MsgCheckpointNoAckResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointNoAckResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCheckpointNoAckResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCheckpointNoAckResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCheckpointNoAckResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCheckpointNoAckResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCheckpointNoAckResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCheckpointNoAckResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCheckpointNoAckResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCheckpointNoAckResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCheckpointNoAckResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCheckpointNoAckResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAckResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCheckpointNoAckResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAckResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAckResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCheckpointNoAckResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse"))
		}
		panic(fmt.Errorf("message heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCheckpointNoAckResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCheckpointNoAckResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCheckpointNoAckResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCheckpointNoAckResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCheckpointNoAckResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCheckpointNoAckResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointNoAckResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCheckpointNoAckResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointNoAckResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCheckpointNoAckResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: heimdallv2/checkpoint/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgCheckpointAdjust defines a SDK message for adjusting the checkpoint
type MsgCheckpointAdjust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeaderIndex uint64              `protobuf:"varint,1,opt,name=header_index,json=headerIndex,proto3" json:"header_index,omitempty"`
	Proposer    string              `protobuf:"bytes,2,opt,name=proposer,proto3" json:"proposer,omitempty"`
	From        string              `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	StartBlock  uint64              `protobuf:"varint,4,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock    uint64              `protobuf:"varint,5,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	RootHash    *types.HeimdallHash `protobuf:"bytes,6,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
}

func (x *MsgCheckpointAdjust) Reset() {
	*x = MsgCheckpointAdjust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointAdjust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointAdjust) ProtoMessage() {}

// Deprecated: Use MsgCheckpointAdjust.ProtoReflect.Descriptor instead.
func (*MsgCheckpointAdjust) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCheckpointAdjust) GetHeaderIndex() uint64 {
	if x != nil {
		return x.HeaderIndex
	}
	return 0
}

func (x *MsgCheckpointAdjust) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *MsgCheckpointAdjust) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MsgCheckpointAdjust) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *MsgCheckpointAdjust) GetEndBlock() uint64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *MsgCheckpointAdjust) GetRootHash() *types.HeimdallHash {
	if x != nil {
		return x.RootHash
	}
	return nil
}

// MsgCheckpointAdjustResponse defines the Msg/CheckpointAdjust response type.
type MsgCheckpointAdjustResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCheckpointAdjustResponse) Reset() {
	*x = MsgCheckpointAdjustResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointAdjustResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointAdjustResponse) ProtoMessage() {}

// Deprecated: Use MsgCheckpointAdjustResponse.ProtoReflect.Descriptor instead.
func (*MsgCheckpointAdjustResponse) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{1}
}

// MsgCheckpoint defines a SDK message for creating the checkpoint
type MsgCheckpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proposer        string              `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	StartBlock      uint64              `protobuf:"varint,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock        uint64              `protobuf:"varint,3,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	RootHash        *types.HeimdallHash `protobuf:"bytes,4,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	AccountRootHash *types.HeimdallHash `protobuf:"bytes,5,opt,name=account_root_hash,json=accountRootHash,proto3" json:"account_root_hash,omitempty"`
	BorChainID      string              `protobuf:"bytes,6,opt,name=bor_chain_i_d,json=borChainID,proto3" json:"bor_chain_i_d,omitempty"`
}

func (x *MsgCheckpoint) Reset() {
	*x = MsgCheckpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpoint) ProtoMessage() {}

// Deprecated: Use MsgCheckpoint.ProtoReflect.Descriptor instead.
func (*MsgCheckpoint) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgCheckpoint) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *MsgCheckpoint) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *MsgCheckpoint) GetEndBlock() uint64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *MsgCheckpoint) GetRootHash() *types.HeimdallHash {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *MsgCheckpoint) GetAccountRootHash() *types.HeimdallHash {
	if x != nil {
		return x.AccountRootHash
	}
	return nil
}

func (x *MsgCheckpoint) GetBorChainID() string {
	if x != nil {
		return x.BorChainID
	}
	return ""
}

// MsgCheckpointResponse defines the Msg/Checkpoint response type.
type MsgCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCheckpointResponse) Reset() {
	*x = MsgCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointResponse) ProtoMessage() {}

// Deprecated: Use MsgCheckpointResponse.ProtoReflect.Descriptor instead.
func (*MsgCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{3}
}

// MsgCheckpointAck defines a SDK message for creating the ack of checkpoint
type MsgCheckpointAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From       string              `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Number     uint64              `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Proposer   string              `protobuf:"bytes,3,opt,name=proposer,proto3" json:"proposer,omitempty"`
	StartBlock uint64              `protobuf:"varint,4,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock   uint64              `protobuf:"varint,5,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	RootHash   *types.HeimdallHash `protobuf:"bytes,6,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	TxHash     *types.HeimdallHash `protobuf:"bytes,7,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	LogIndex   uint64              `protobuf:"varint,8,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
}

func (x *MsgCheckpointAck) Reset() {
	*x = MsgCheckpointAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointAck) ProtoMessage() {}

// Deprecated: Use MsgCheckpointAck.ProtoReflect.Descriptor instead.
func (*MsgCheckpointAck) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgCheckpointAck) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MsgCheckpointAck) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *MsgCheckpointAck) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

func (x *MsgCheckpointAck) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *MsgCheckpointAck) GetEndBlock() uint64 {
	if x != nil {
		return x.EndBlock
	}
	return 0
}

func (x *MsgCheckpointAck) GetRootHash() *types.HeimdallHash {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *MsgCheckpointAck) GetTxHash() *types.HeimdallHash {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *MsgCheckpointAck) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

// MsgCheckpointAck defines the Msg/CheckpointAck response type.
type MsgCheckpointAckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCheckpointAckResponse) Reset() {
	*x = MsgCheckpointAckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointAckResponse) ProtoMessage() {}

// Deprecated: Use MsgCheckpointAckResponse.ProtoReflect.Descriptor instead.
func (*MsgCheckpointAckResponse) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{5}
}

// MsgCheckpointNoAck defines a SDK message for creating the no-ack
type MsgCheckpointNoAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
}

func (x *MsgCheckpointNoAck) Reset() {
	*x = MsgCheckpointNoAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointNoAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointNoAck) ProtoMessage() {}

// Deprecated: Use MsgCheckpointNoAck.ProtoReflect.Descriptor instead.
func (*MsgCheckpointNoAck) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgCheckpointNoAck) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

// MsgCheckpointNoAck defines the Msg/CheckpointNoAck response type.
type MsgCheckpointNoAckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCheckpointNoAckResponse) Reset() {
	*x = MsgCheckpointNoAckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCheckpointNoAckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCheckpointNoAckResponse) ProtoMessage() {}

// Deprecated: Use MsgCheckpointNoAckResponse.ProtoReflect.Descriptor instead.
func (*MsgCheckpointNoAckResponse) Descriptor() ([]byte, []int) {
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP(), []int{7}
}

var File_heimdallv2_checkpoint_v1_tx_proto protoreflect.FileDescriptor

var file_heimdallv2_checkpoint_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x21, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x18, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x67,
	0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61,
	0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x68, 0x61, 0x73,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xee, 0x02, 0x0a, 0x13, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0b, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7,
	0xb0, 0x2a, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x22, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c,
	0x6c, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61,
	0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x3a, 0x2b, 0x88, 0xa0, 0x1f,
	0x01, 0xe8, 0xa0, 0x1f, 0x00, 0x8a, 0xe7, 0xb0, 0x2a, 0x1e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86, 0x03, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x09,
	0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x46, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x48,
	0x61, 0x73, 0x68, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08,
	0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x55, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x48,
	0x61, 0x73, 0x68, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x28, 0x0a, 0x0d, 0x62, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x5f, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0a, 0x62,
	0x6f, 0x72, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x44, 0x3a, 0x25, 0x88, 0xa0, 0x1f, 0x01, 0xe8,
	0xa0, 0x1f, 0x01, 0x8a, 0xe7, 0xb0, 0x2a, 0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x17, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc5, 0x03, 0x0a, 0x10, 0x4d, 0x73,
	0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x31,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0xd2, 0xb4,
	0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x1d, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x39, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1d, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a,
	0x01, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x46, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x65, 0x69,
	0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x48, 0x65,
	0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00,
	0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x42, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x48, 0x61, 0x73, 0x68,
	0x42, 0x09, 0xc8, 0xde, 0x1f, 0x00, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x74, 0x78, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x42, 0x05, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x28, 0x88, 0xa0, 0x1f, 0x01, 0xe8, 0xa0, 0x1f,
	0x00, 0x8a, 0xe7, 0xb0, 0x2a, 0x1b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2f, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63,
	0x6b, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a,
	0x12, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x6f,
	0x41, 0x63, 0x6b, 0x12, 0x31, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x1d, 0xd2, 0xb4, 0x2d, 0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0xa8, 0xe7, 0xb0, 0x2a, 0x01,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x3a, 0x2a, 0x88, 0xa0, 0x1f, 0x01, 0xe8, 0xa0, 0x1f, 0x00,
	0x8a, 0xe7, 0xb0, 0x2a, 0x1d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2f,
	0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x41,
	0x63, 0x6b, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xd6, 0x03, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x78, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x68,
	0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x68, 0x65,
	0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x66, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x27, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x1a, 0x2f, 0x2e, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x12, 0x2a, 0x2e, 0x68, 0x65,
	0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x6b, 0x1a, 0x32, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61,
	0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x0f, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x41, 0x63, 0x6b, 0x12, 0x2c,
	0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x41, 0x63, 0x6b, 0x1a, 0x34, 0x2e, 0x68,
	0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4e, 0x6f, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xf5, 0x01, 0x0a, 0x1c, 0x63, 0x6f,
	0x6d, 0x2e, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x30, 0x78, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x2d, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x48, 0x43, 0x58, 0xaa, 0x02, 0x18, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61,
	0x6c, 0x6c, 0x76, 0x32, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x18, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x5c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x24,
	0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x32, 0x5c, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1a, 0x48, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76,
	0x32, 0x3a, 0x3a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_heimdallv2_checkpoint_v1_tx_proto_rawDescOnce sync.Once
	file_heimdallv2_checkpoint_v1_tx_proto_rawDescData = file_heimdallv2_checkpoint_v1_tx_proto_rawDesc
)

func file_heimdallv2_checkpoint_v1_tx_proto_rawDescGZIP() []byte {
	file_heimdallv2_checkpoint_v1_tx_proto_rawDescOnce.Do(func() {
		file_heimdallv2_checkpoint_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_heimdallv2_checkpoint_v1_tx_proto_rawDescData)
	})
	return file_heimdallv2_checkpoint_v1_tx_proto_rawDescData
}

var file_heimdallv2_checkpoint_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_heimdallv2_checkpoint_v1_tx_proto_goTypes = []interface{}{
	(*MsgCheckpointAdjust)(nil),         // 0: heimdallv2.checkpoint.v1.MsgCheckpointAdjust
	(*MsgCheckpointAdjustResponse)(nil), // 1: heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse
	(*MsgCheckpoint)(nil),               // 2: heimdallv2.checkpoint.v1.MsgCheckpoint
	(*MsgCheckpointResponse)(nil),       // 3: heimdallv2.checkpoint.v1.MsgCheckpointResponse
	(*MsgCheckpointAck)(nil),            // 4: heimdallv2.checkpoint.v1.MsgCheckpointAck
	(*MsgCheckpointAckResponse)(nil),    // 5: heimdallv2.checkpoint.v1.MsgCheckpointAckResponse
	(*MsgCheckpointNoAck)(nil),          // 6: heimdallv2.checkpoint.v1.MsgCheckpointNoAck
	(*MsgCheckpointNoAckResponse)(nil),  // 7: heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse
	(*types.HeimdallHash)(nil),          // 8: heimdallv2.types.HeimdallHash
}
var file_heimdallv2_checkpoint_v1_tx_proto_depIdxs = []int32{
	8, // 0: heimdallv2.checkpoint.v1.MsgCheckpointAdjust.root_hash:type_name -> heimdallv2.types.HeimdallHash
	8, // 1: heimdallv2.checkpoint.v1.MsgCheckpoint.root_hash:type_name -> heimdallv2.types.HeimdallHash
	8, // 2: heimdallv2.checkpoint.v1.MsgCheckpoint.account_root_hash:type_name -> heimdallv2.types.HeimdallHash
	8, // 3: heimdallv2.checkpoint.v1.MsgCheckpointAck.root_hash:type_name -> heimdallv2.types.HeimdallHash
	8, // 4: heimdallv2.checkpoint.v1.MsgCheckpointAck.tx_hash:type_name -> heimdallv2.types.HeimdallHash
	0, // 5: heimdallv2.checkpoint.v1.Msg.CheckpointAdjust:input_type -> heimdallv2.checkpoint.v1.MsgCheckpointAdjust
	2, // 6: heimdallv2.checkpoint.v1.Msg.Checkpoint:input_type -> heimdallv2.checkpoint.v1.MsgCheckpoint
	4, // 7: heimdallv2.checkpoint.v1.Msg.CheckpointAck:input_type -> heimdallv2.checkpoint.v1.MsgCheckpointAck
	6, // 8: heimdallv2.checkpoint.v1.Msg.CheckpointNoAck:input_type -> heimdallv2.checkpoint.v1.MsgCheckpointNoAck
	1, // 9: heimdallv2.checkpoint.v1.Msg.CheckpointAdjust:output_type -> heimdallv2.checkpoint.v1.MsgCheckpointAdjustResponse
	3, // 10: heimdallv2.checkpoint.v1.Msg.Checkpoint:output_type -> heimdallv2.checkpoint.v1.MsgCheckpointResponse
	5, // 11: heimdallv2.checkpoint.v1.Msg.CheckpointAck:output_type -> heimdallv2.checkpoint.v1.MsgCheckpointAckResponse
	7, // 12: heimdallv2.checkpoint.v1.Msg.CheckpointNoAck:output_type -> heimdallv2.checkpoint.v1.MsgCheckpointNoAckResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_heimdallv2_checkpoint_v1_tx_proto_init() }
func file_heimdallv2_checkpoint_v1_tx_proto_init() {
	if File_heimdallv2_checkpoint_v1_tx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointAdjust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointAdjustResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointAckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointNoAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_heimdallv2_checkpoint_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCheckpointNoAckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_heimdallv2_checkpoint_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_heimdallv2_checkpoint_v1_tx_proto_goTypes,
		DependencyIndexes: file_heimdallv2_checkpoint_v1_tx_proto_depIdxs,
		MessageInfos:      file_heimdallv2_checkpoint_v1_tx_proto_msgTypes,
	}.Build()
	File_heimdallv2_checkpoint_v1_tx_proto = out.File
	file_heimdallv2_checkpoint_v1_tx_proto_rawDesc = nil
	file_heimdallv2_checkpoint_v1_tx_proto_goTypes = nil
	file_heimdallv2_checkpoint_v1_tx_proto_depIdxs = nil
}
