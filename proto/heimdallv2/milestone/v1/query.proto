syntax = "proto3";
package heimdallv2.milestone.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "amino/amino.proto";
import "heimdallv2/milestone/v1/milestone.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/milestone/types";

// Query defines the gRPC querier service.
service Query {

  // Params queries for the milestone parameters
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/params";
  }

  // Count queries for the mileston count
  rpc Count(QueryCountRequest) returns (QueryCountResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/count";
  }

  // LatestMilestone queries for the latest milestone
  rpc LatestMilestone(QueryLatestMilestoneRequest)
      returns (QueryLatestMilestoneResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/latest";
  }

  // Milestone queries for the milestone based on the number
  rpc Milestone(QueryMilestoneRequest) returns (QueryMilestoneResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/{number}";
  }

  // LatestNoAckMilestone query for the LatestNoAck
  rpc LatestNoAckMilestone(QueryLatestNoAckMilestoneRequest)
      returns (QueryLatestNoAckMilestoneResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/lastNoAck";
  }

  // NoAckMilestoneByID query for the no-ack by ID
  rpc NoAckMilestoneByID(QueryNoAckMilestoneByIDRequest)
      returns (QueryNoAckMilestoneByIDResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/milestone/noAck/{id}";
  }
}

// QueryParamsRequest is request type for Query/Params
// RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params
// RPC method
message QueryParamsResponse {
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryCountRequest is response type for the Query/Count RPC method
message QueryCountRequest {}

// QueryCountResponse is response type for the Query/Count RPC method
message QueryCountResponse {
  uint64 count = 1 [ (amino.dont_omitempty) = true ];
}

// QueryAckCountRequest is response type for the Query/LastNoAckCount RPC method
message QueryLastNoAckRequest {}

// QueryAckCountResponse is response type for the Query/LastNoAckCount RPC
// method
message QueryLastNoAckResponse {
  uint64 result = 1 [ (amino.dont_omitempty) = true ];
}

// QueryLatestMilestoneRequest is response type for the Query/LatestMilestone
// RPC method
message QueryLatestMilestoneRequest {}

// QueryLatestMilestoneResponse is response type for the Query/LatestMilestone
// RPC method
message QueryLatestMilestoneResponse {
  Milestone milestone = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryMilestoneRequest is response type for the Query/Milestone/{number} RPC
// method
message QueryMilestoneRequest {
  uint64 number = 1 [ (amino.dont_omitempty) = true ];
}

// QueryMilestoneResponse is response type for the Query/Milestone/{number}
// RPC method
message QueryMilestoneResponse {
  Milestone milestone = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryLatestNoAckMilestoneRequest is response type for the
// Query/LatestNoAckMilestone" RPC method
message QueryLatestNoAckMilestoneRequest {}

// QueryLatestNoAckMilestoneResponse is response type for the
// Query/LatestNoAckMilestone RPC method
message QueryLatestNoAckMilestoneResponse {
  string result = 1 [ (amino.dont_omitempty) = true ];
}

// QueryNoAckMilestoneByIDRequest is response type for the
// Query/NoAckMilestoneByID RPC method
message QueryNoAckMilestoneByIDRequest {
  string id = 1 [ (amino.dont_omitempty) = true ];
}

// QueryNoAckMilestoneByIDResponse is response type for the
// Query/NoAckMilestoneByID RPC method
message QueryNoAckMilestoneByIDResponse {
  bool result = 1 [ (amino.dont_omitempty) = true ];
}
