syntax = "proto3";
package heimdallv2.milestone.v1;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "heimdallv2/types/hash.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/milestone/types";

// Milestone represents the milestone struct
message Milestone {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  string proposer = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  uint64 start_block = 2 [ (amino.dont_omitempty) = true ];

  uint64 end_block = 3 [ (amino.dont_omitempty) = true ];

  heimdallv2.types.HeimdallHash hash = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  string bor_chain_id = 5 [ (amino.dont_omitempty) = true ];

  string milestone_id = 6 [ (amino.dont_omitempty) = true ];

  uint64 timestamp = 7 [ (amino.dont_omitempty) = true ];
}

message MilestoneCount {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  uint64 count = 1 [ (amino.dont_omitempty) = true ];
}

// Params represents the milestone parameters
message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  uint64 min_milestone_length = 1 [ (amino.dont_omitempty) = true ];
  google.protobuf.Duration milestone_buffer_time = 2 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  uint64 milestone_buffer_length = 3 [ (amino.dont_omitempty) = true ];
  uint64 milestone_tx_confirmations = 4 [ (amino.dont_omitempty) = true ];
}
