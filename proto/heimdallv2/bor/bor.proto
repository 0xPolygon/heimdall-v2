syntax = "proto3";
package heimdallv2.bor;

import "gogoproto/gogo.proto";
// import "cosmos_proto/cosmos.proto";
import "heimdallv2/stake/validator.proto";
import "amino/amino.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/bor/types";

// Span represents a range of block numbers in bor
message Span {
  uint64 id = 1 [ (amino.dont_omitempty) = true ];
  uint64 start_block = 2 [ (amino.dont_omitempty) = true ];
  uint64 end_block = 3 [ (amino.dont_omitempty) = true ];
  heimdallv2.stake.ValidatorSet validator_set = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  repeated heimdallv2.stake.Validator selected_producers = 5
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
  string bor_chain_id = 6 [ (amino.dont_omitempty) = true ];
}

// TODO HV2: import stake module's proto definitions for
// validators/validatorsets

// Validator represents volatile state of a bor validator
// message Validator {
//   uint64 id = 1;
//   uint64 start_epoch = 2;
//   uint64 end_epoch = 3;
//   uint64 nonce = 4;
//   int64 voting_power = 5;
//   bytes pub_key = 6;
//   string signer = 7 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
//   string last_updated = 8;
//   bool jailed = 9;
//   int64 proposer_priority = 10;
// }

// Validator represents a bor validator set
// message ValidatorSet {
//   repeated Validator validators = 1;
//   Validator proposer = 2;
// }

// Params represents the parameters for the bor module
message Params {
  option (gogoproto.equal) = true;
  uint64 sprint_duration = 1 [ (amino.dont_omitempty) = true ];
  uint64 span_duration = 2 [ (amino.dont_omitempty) = true ];
  uint64 producer_count = 3 [ (amino.dont_omitempty) = true ];
}
