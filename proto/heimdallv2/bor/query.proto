syntax = "proto3";
package heimdallv2.bor;

import "gogoproto/gogo.proto";
import "cosmos/query/v1/query.proto";
import "google/api/annotations.proto";
import "heimdallv2/bor/bor.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/bor/types";

// Query defines the gRPC querier service.
service Query {

  rpc SpanById(QuerySpanByIdRequest) returns (QuerySpanByIdResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/span/{span_id}";
  }

  rpc SpanList(QuerySpanListRequest) returns (QuerySpanListResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/span/list";
  }

  rpc LatestSpan(QueryLatestSpanRequest) returns (QueryLatestSpanResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/latest-span";
  }

  rpc NextSpanSeed(QueryNextSpanSeedRequest)
      returns (QueryNextSpanSeedResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/next-span-seed";
  }

  rpc NextSpan(QueryNextSpanRequest) returns (QueryNextSpanResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/prepare-next-span";
  }

  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/heimdallv2/bor/params";
  }
}

// QuerySpanByIdRequest defines the gRPC request structure for querying
// a bor span by span id.
message QuerySpanByIdRequest { string span_id = 1; }

// QuerySpanByIdResponse defines the gRPC response structure for querying
// a bor span by span id.
message QuerySpanByIdResponse {
  string height = 1;
  Span span = 2;
}

// QuerySpanListRequest defines the gRPC request structure for querying
// a list of bor spans.
message QuerySpanListRequest {
  uint64 page = 1;
  uint64 limit = 2;
}

// QuerySpanListResponse defines the gRPC response structure for querying
// a list of bor spans.
message QuerySpanListResponse {
  string height = 1;
  repeated Span span_list = 2 [ (gogoproto.nullable) = false ];
}

// QueryLatestSpanResponse defines the gRPC response structure for querying
// the latest bor span.
message QueryLatestSpanRequest {}

// QueryLatestSpanResponse defines the gRPC response structure for querying
// the latest bor span.
message QueryLatestSpanResponse {
  string height = 1;
  Span span = 2;
}

// QueryNextSpanSeedRequest defines the gRPC request structure for querying
// the next bor span seed.
message QueryNextSpanSeedRequest {}

// QueryNextSpanSeedResponse defines the gRPC response structure for querying
// the next bor span seed.
message QueryNextSpanSeedResponse {
  string height = 1;
  string seed = 2;
}

// QueryPrepareNextSpanRequest defines the gRPC request structure for querying
// the next bor span.
message QueryNextSpanRequest {
  uint64 span_id = 1;
  uint64 start_block = 2;
  string bor_chain_id = 3;
}

// QueryPrepareNextSpanResponse defines the gRPC response structure for querying
// the next bor span.
message QueryNextSpanResponse {
  string height = 1;
  Span span = 2;
}

// QueryParamsRequest defines the gRPC request structure for querying
// the bor module parameters.
message QueryParamsRequest {}

// QueryParamsResponse defines the gRPC response structure for querying
// the bor module parameters.
message QueryParamsResponse {
  string height = 1;
  Params params = 2;
}
