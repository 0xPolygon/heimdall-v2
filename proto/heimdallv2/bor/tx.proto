syntax = "proto3";
package heimdallv2.bor;

import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "heimdallv2/bor/bor.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/bor/types";

// Msg defines the bor Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // ProposeSpan defines a method for proposing a bor span.
  rpc ProposeSpan(MsgProposeSpan) returns (MsgProposeSpanResponse);

  // UpdateParams defines a method to update the bor params.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgProposeSpan represents a message to propose a span.
message MsgProposeSpan {
  option (amino.name) = "heimdallv2/bor/MsgProposeSpan";
  option (cosmos.msg.v1.signer) = "proposer";

  uint64 span_id = 1;
  string proposer = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint64 start_block = 3;
  uint64 end_block = 4;
  string chain_id = 5;
  bytes seed = 6;
}

// MsgProposeSpanResponse represents a response to a Msg/ProposeSpan message.
message MsgProposeSpanResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "heimdallv2/bor/MsgUpdateParams";

  // authority is the address that controls the module (defaults to x/gov unless
  // overwritten).
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // params defines the x/bor parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
