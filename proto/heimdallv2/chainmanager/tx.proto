syntax = "proto3";
package heimdallv2.chainmanager;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "heimdallv2/chainmanager/chainmanager.proto";
import "amino/amino.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/chainmanager/types";

service Msg {
  option (cosmos.msg.v1.service) = true;
  // UpdateParams defines a governance operation for updating the x/chainmanager
  // module parameters. The authority is defined in the keeper.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgUpdateParams {
  option (amino.name) = "heimdallv2/chainmanager/MsgUpdateParams";
  option (cosmos.msg.v1.signer) = "authority";
  string authority = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (amino.dont_omitempty) = true
  ];
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message MsgUpdateParamsResponse {}
