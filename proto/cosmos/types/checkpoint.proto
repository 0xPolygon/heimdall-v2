syntax = "proto3";
package cosmos.types;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "tendermint/types/types.proto";
import "tendermint/abci/types.proto";
import "cosmos/types/staking.proto";

option go_package = "x/types";

message Checkpoint {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  string proposer = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];

  uint64 start_block = 2 [ (amino.dont_omitempty) = true ];

  uint64 end_block = 3 [ (amino.dont_omitempty) = true ];

  HeimdallHash root_hash = 4
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  string bor_chain_i_d = 5 [ (amino.dont_omitempty) = true ];

  uint64 time_Stamp = 6 [ (amino.dont_omitempty) = true ];
}

message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = true;

  google.protobuf.Duration checkpoint_buffer_time = 1 [
    (gogoproto.stdduration) = true,
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string avg_checkpoint_length = 2 [ (amino.dont_omitempty) = true ];
  string max_checkpoint_length = 3 [ (amino.dont_omitempty) = true ];
  string child_block_interval = 4 [ (amino.dont_omitempty) = true ];
}
