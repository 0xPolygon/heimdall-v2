syntax = "proto3";
package cosmos.clerk.v1beta1;

import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/types/validator.proto";

option go_package = "github.com/0xPolygon/heimdall-v2/x/clerk/types";

// Msg defines the x/clerk Msg service.
service Msg {
  rpc MsgEventRecord(MsgEventRecordRequest) returns (MsgEventRecordResponse);
}

message MsgEventRecordRequest {}

message MsgEventRecordResponse {}

message MsgEventRecord {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string from = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.types.HeimdallHash tx_hash = 2;
  uint64 log_index = 3;
  uint64 block_number = 4;
  string contract_address = 5 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.types.HexBytes data = 6;
  uint64 i_d = 7;
  string chain_i_d = 8;
}