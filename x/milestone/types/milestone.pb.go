// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: heimdallv2/milestone/milestone.proto

package types

import (
	bytes "bytes"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/durationpb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Milestone represents the milestone struct
type Milestone struct {
	Proposer    string `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	StartBlock  uint64 `protobuf:"varint,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock    uint64 `protobuf:"varint,3,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	Hash        []byte `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash,omitempty"`
	BorChainId  string `protobuf:"bytes,5,opt,name=bor_chain_id,json=borChainId,proto3" json:"bor_chain_id,omitempty"`
	MilestoneId string `protobuf:"bytes,6,opt,name=milestone_id,json=milestoneId,proto3" json:"milestone_id,omitempty"`
	Timestamp   uint64 `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *Milestone) Reset()         { *m = Milestone{} }
func (m *Milestone) String() string { return proto.CompactTextString(m) }
func (*Milestone) ProtoMessage()    {}
func (*Milestone) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d06b2e981472ef5, []int{0}
}
func (m *Milestone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Milestone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Milestone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Milestone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Milestone.Merge(m, src)
}
func (m *Milestone) XXX_Size() int {
	return m.Size()
}
func (m *Milestone) XXX_DiscardUnknown() {
	xxx_messageInfo_Milestone.DiscardUnknown(m)
}

var xxx_messageInfo_Milestone proto.InternalMessageInfo

func (m *Milestone) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *Milestone) GetStartBlock() uint64 {
	if m != nil {
		return m.StartBlock
	}
	return 0
}

func (m *Milestone) GetEndBlock() uint64 {
	if m != nil {
		return m.EndBlock
	}
	return 0
}

func (m *Milestone) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Milestone) GetBorChainId() string {
	if m != nil {
		return m.BorChainId
	}
	return ""
}

func (m *Milestone) GetMilestoneId() string {
	if m != nil {
		return m.MilestoneId
	}
	return ""
}

func (m *Milestone) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

// Params represents the milestone parameters
type Params struct {
	MinMilestoneLength       uint64        `protobuf:"varint,1,opt,name=min_milestone_length,json=minMilestoneLength,proto3" json:"min_milestone_length,omitempty"`
	MilestoneBufferTime      time.Duration `protobuf:"bytes,2,opt,name=milestone_buffer_time,json=milestoneBufferTime,proto3,stdduration" json:"milestone_buffer_time"`
	MilestoneBufferLength    uint64        `protobuf:"varint,3,opt,name=milestone_buffer_length,json=milestoneBufferLength,proto3" json:"milestone_buffer_length,omitempty"`
	MilestoneTxConfirmations uint64        `protobuf:"varint,4,opt,name=milestone_tx_confirmations,json=milestoneTxConfirmations,proto3" json:"milestone_tx_confirmations,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_6d06b2e981472ef5, []int{1}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMinMilestoneLength() uint64 {
	if m != nil {
		return m.MinMilestoneLength
	}
	return 0
}

func (m *Params) GetMilestoneBufferTime() time.Duration {
	if m != nil {
		return m.MilestoneBufferTime
	}
	return 0
}

func (m *Params) GetMilestoneBufferLength() uint64 {
	if m != nil {
		return m.MilestoneBufferLength
	}
	return 0
}

func (m *Params) GetMilestoneTxConfirmations() uint64 {
	if m != nil {
		return m.MilestoneTxConfirmations
	}
	return 0
}

func init() {
	proto.RegisterType((*Milestone)(nil), "heimdallv2.milestone.Milestone")
	proto.RegisterType((*Params)(nil), "heimdallv2.milestone.Params")
}

func init() {
	proto.RegisterFile("heimdallv2/milestone/milestone.proto", fileDescriptor_6d06b2e981472ef5)
}

var fileDescriptor_6d06b2e981472ef5 = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x41, 0x8b, 0xd3, 0x4e,
	0x18, 0xc6, 0x3b, 0xfd, 0x77, 0xfb, 0x6f, 0xa7, 0xf5, 0xe0, 0xd8, 0xc5, 0xb4, 0x60, 0x5a, 0xaa,
	0x68, 0x11, 0x36, 0x91, 0x7a, 0x10, 0x05, 0x0f, 0xa6, 0x5e, 0x16, 0x56, 0x58, 0x74, 0x4f, 0x22,
	0x84, 0xa4, 0x99, 0x26, 0x83, 0x99, 0x79, 0xcb, 0xcc, 0x74, 0xe9, 0x7e, 0x03, 0x8f, 0x1e, 0x3d,
	0xee, 0xd1, 0x8b, 0xe8, 0xc1, 0x0f, 0xb1, 0xc7, 0xc5, 0x93, 0x27, 0x95, 0xf6, 0xa0, 0x1f, 0x43,
	0x3a, 0x49, 0x93, 0xaa, 0x97, 0x90, 0x79, 0x9f, 0xdf, 0xbc, 0xcf, 0xcb, 0xf3, 0x32, 0xf8, 0x56,
	0x42, 0x19, 0x8f, 0x82, 0x34, 0x3d, 0x1d, 0xbb, 0x9c, 0xa5, 0x54, 0x69, 0x10, 0xb4, 0xfc, 0x73,
	0xe6, 0x12, 0x34, 0x90, 0x4e, 0x49, 0x39, 0x85, 0xd6, 0xbb, 0x1a, 0x70, 0x26, 0xc0, 0x35, 0xdf,
	0x0c, 0xec, 0x75, 0xa7, 0xa0, 0x38, 0x28, 0xdf, 0x9c, 0xdc, 0xec, 0x90, 0x4b, 0x9d, 0x18, 0x62,
	0xc8, 0xea, 0x9b, 0xbf, 0xbc, 0x6a, 0xc7, 0x00, 0x71, 0x4a, 0x5d, 0x73, 0x0a, 0x17, 0x33, 0x37,
	0x5a, 0xc8, 0x40, 0x33, 0x10, 0x99, 0x3e, 0xfc, 0x58, 0xc5, 0xcd, 0x67, 0x5b, 0x47, 0xf2, 0x10,
	0x37, 0xe6, 0x12, 0xe6, 0xa0, 0xa8, 0xb4, 0xd0, 0x00, 0x8d, 0x9a, 0xde, 0x8d, 0x2f, 0x9f, 0x0f,
	0x3a, 0xb9, 0xcf, 0x93, 0x28, 0x92, 0x54, 0xa9, 0x17, 0x5a, 0x32, 0x11, 0xbf, 0xff, 0xf9, 0xe9,
	0x2e, 0x7a, 0x5e, 0xe0, 0xe4, 0x36, 0x6e, 0x29, 0x1d, 0x48, 0xed, 0x87, 0x29, 0x4c, 0x5f, 0x5b,
	0xd5, 0x01, 0x1a, 0xd5, 0xbc, 0xbd, 0x8c, 0xc2, 0x46, 0xf1, 0x36, 0x02, 0x19, 0xe2, 0x26, 0x15,
	0x51, 0x4e, 0xfd, 0xb7, 0x4b, 0x35, 0xa8, 0x88, 0x32, 0xa6, 0x8b, 0x6b, 0x49, 0xa0, 0x12, 0xab,
	0x36, 0x40, 0xa3, 0xf6, 0x56, 0x36, 0x25, 0x72, 0x07, 0xb7, 0x43, 0x90, 0xfe, 0x34, 0x09, 0x98,
	0xf0, 0x59, 0x64, 0xed, 0x99, 0x29, 0xb7, 0x3e, 0x21, 0xc8, 0xc9, 0x46, 0x39, 0x8c, 0xc8, 0x08,
	0xb7, 0x8b, 0x24, 0x37, 0x60, 0x7d, 0x17, 0x6c, 0x15, 0xd2, 0x61, 0x44, 0x6e, 0xe2, 0xa6, 0x66,
	0x9c, 0x2a, 0x1d, 0xf0, 0xb9, 0xf5, 0xff, 0xee, 0x44, 0x65, 0xfd, 0x51, 0xe3, 0xcd, 0x79, 0x1f,
	0xfd, 0x3a, 0xef, 0xa3, 0xe1, 0x87, 0x2a, 0xae, 0x1f, 0x07, 0x32, 0xe0, 0x8a, 0x3c, 0xc0, 0x1d,
	0xce, 0x84, 0x5f, 0xfa, 0xa4, 0x54, 0xc4, 0x3a, 0x31, 0xd1, 0x15, 0x4d, 0x08, 0x67, 0xa2, 0x48,
	0xf8, 0xc8, 0x00, 0xe4, 0x15, 0xde, 0x2f, 0x2f, 0x85, 0x8b, 0xd9, 0x8c, 0x4a, 0x7f, 0xe3, 0x65,
	0x62, 0x6b, 0x8d, 0xbb, 0x4e, 0xb6, 0x35, 0x67, 0xbb, 0x35, 0xe7, 0x69, 0xbe, 0x35, 0xef, 0xca,
	0xc5, 0xb7, 0x7e, 0xe5, 0xdd, 0xf7, 0x3e, 0xca, 0x9a, 0x5f, 0x2b, 0xda, 0x78, 0xa6, 0xcb, 0x09,
	0xe3, 0x94, 0x3c, 0xc6, 0xd7, 0xff, 0xe9, 0x9e, 0x4f, 0xf6, 0x47, 0xe0, 0xfb, 0x7f, 0x5d, 0xce,
	0x87, 0x9b, 0xe0, 0x5e, 0x79, 0x5d, 0x2f, 0xfd, 0x29, 0x88, 0x19, 0x93, 0xdc, 0xf8, 0x2b, 0xb3,
	0x93, 0xa2, 0x83, 0x55, 0x80, 0x27, 0xcb, 0xc9, 0x2e, 0x56, 0xe6, 0xe5, 0x1d, 0x5d, 0xac, 0x6c,
	0x74, 0xb9, 0xb2, 0xd1, 0x8f, 0x95, 0x8d, 0xde, 0xae, 0xed, 0xca, 0xe5, 0xda, 0xae, 0x7c, 0x5d,
	0xdb, 0x95, 0x97, 0xe3, 0x98, 0xe9, 0x64, 0x11, 0x3a, 0x53, 0xe0, 0xee, 0xbd, 0xe5, 0x31, 0xa4,
	0x67, 0x31, 0x08, 0x77, 0xfb, 0x14, 0x0e, 0x4e, 0xc7, 0xee, 0x72, 0xe7, 0xcd, 0xe8, 0xb3, 0x39,
	0x55, 0x61, 0xdd, 0x44, 0x72, 0xff, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdb, 0x2f, 0x71, 0x3f,
	0x58, 0x03, 0x00, 0x00,
}

func (this *Milestone) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Milestone)
	if !ok {
		that2, ok := that.(Milestone)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Proposer != that1.Proposer {
		return false
	}
	if this.StartBlock != that1.StartBlock {
		return false
	}
	if this.EndBlock != that1.EndBlock {
		return false
	}
	if !bytes.Equal(this.Hash, that1.Hash) {
		return false
	}
	if this.BorChainId != that1.BorChainId {
		return false
	}
	if this.MilestoneId != that1.MilestoneId {
		return false
	}
	if this.Timestamp != that1.Timestamp {
		return false
	}
	return true
}
func (this *Params) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*Params)
	if !ok {
		that2, ok := that.(Params)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.MinMilestoneLength != that1.MinMilestoneLength {
		return false
	}
	if this.MilestoneBufferTime != that1.MilestoneBufferTime {
		return false
	}
	if this.MilestoneBufferLength != that1.MilestoneBufferLength {
		return false
	}
	if this.MilestoneTxConfirmations != that1.MilestoneTxConfirmations {
		return false
	}
	return true
}
func (m *Milestone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Milestone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Milestone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Timestamp != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x38
	}
	if len(m.MilestoneId) > 0 {
		i -= len(m.MilestoneId)
		copy(dAtA[i:], m.MilestoneId)
		i = encodeVarintMilestone(dAtA, i, uint64(len(m.MilestoneId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BorChainId) > 0 {
		i -= len(m.BorChainId)
		copy(dAtA[i:], m.BorChainId)
		i = encodeVarintMilestone(dAtA, i, uint64(len(m.BorChainId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Hash) > 0 {
		i -= len(m.Hash)
		copy(dAtA[i:], m.Hash)
		i = encodeVarintMilestone(dAtA, i, uint64(len(m.Hash)))
		i--
		dAtA[i] = 0x22
	}
	if m.EndBlock != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.EndBlock))
		i--
		dAtA[i] = 0x18
	}
	if m.StartBlock != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.StartBlock))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Proposer) > 0 {
		i -= len(m.Proposer)
		copy(dAtA[i:], m.Proposer)
		i = encodeVarintMilestone(dAtA, i, uint64(len(m.Proposer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MilestoneTxConfirmations != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.MilestoneTxConfirmations))
		i--
		dAtA[i] = 0x20
	}
	if m.MilestoneBufferLength != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.MilestoneBufferLength))
		i--
		dAtA[i] = 0x18
	}
	n1, err1 := github_com_cosmos_gogoproto_types.StdDurationMarshalTo(m.MilestoneBufferTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MilestoneBufferTime):])
	if err1 != nil {
		return 0, err1
	}
	i -= n1
	i = encodeVarintMilestone(dAtA, i, uint64(n1))
	i--
	dAtA[i] = 0x12
	if m.MinMilestoneLength != 0 {
		i = encodeVarintMilestone(dAtA, i, uint64(m.MinMilestoneLength))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintMilestone(dAtA []byte, offset int, v uint64) int {
	offset -= sovMilestone(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Milestone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Proposer)
	if l > 0 {
		n += 1 + l + sovMilestone(uint64(l))
	}
	if m.StartBlock != 0 {
		n += 1 + sovMilestone(uint64(m.StartBlock))
	}
	if m.EndBlock != 0 {
		n += 1 + sovMilestone(uint64(m.EndBlock))
	}
	l = len(m.Hash)
	if l > 0 {
		n += 1 + l + sovMilestone(uint64(l))
	}
	l = len(m.BorChainId)
	if l > 0 {
		n += 1 + l + sovMilestone(uint64(l))
	}
	l = len(m.MilestoneId)
	if l > 0 {
		n += 1 + l + sovMilestone(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovMilestone(uint64(m.Timestamp))
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MinMilestoneLength != 0 {
		n += 1 + sovMilestone(uint64(m.MinMilestoneLength))
	}
	l = github_com_cosmos_gogoproto_types.SizeOfStdDuration(m.MilestoneBufferTime)
	n += 1 + l + sovMilestone(uint64(l))
	if m.MilestoneBufferLength != 0 {
		n += 1 + sovMilestone(uint64(m.MilestoneBufferLength))
	}
	if m.MilestoneTxConfirmations != 0 {
		n += 1 + sovMilestone(uint64(m.MilestoneTxConfirmations))
	}
	return n
}

func sovMilestone(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMilestone(x uint64) (n int) {
	return sovMilestone(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Milestone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMilestone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Milestone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Milestone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMilestone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMilestone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
			}
			m.StartBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
			}
			m.EndBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthMilestone
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthMilestone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hash = append(m.Hash[:0], dAtA[iNdEx:postIndex]...)
			if m.Hash == nil {
				m.Hash = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BorChainId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMilestone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMilestone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BorChainId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilestoneId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMilestone
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMilestone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MilestoneId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMilestone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMilestone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMilestone
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MinMilestoneLength", wireType)
			}
			m.MinMilestoneLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MinMilestoneLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilestoneBufferTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMilestone
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMilestone
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdDurationUnmarshal(&m.MilestoneBufferTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilestoneBufferLength", wireType)
			}
			m.MilestoneBufferLength = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MilestoneBufferLength |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilestoneTxConfirmations", wireType)
			}
			m.MilestoneTxConfirmations = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MilestoneTxConfirmations |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipMilestone(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMilestone
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMilestone(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMilestone
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMilestone
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMilestone
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMilestone
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMilestone
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMilestone        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMilestone          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMilestone = fmt.Errorf("proto: unexpected end of group")
)
