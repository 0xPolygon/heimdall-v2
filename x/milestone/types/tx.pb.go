// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: heimdallv2/milestone/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	types "github.com/0xPolygon/heimdall-v2/types"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgMilestone defines a SDK message for the milestone
type MsgMilestone struct {
	Proposer    string             `protobuf:"bytes,1,opt,name=proposer,proto3" json:"proposer,omitempty"`
	StartBlock  uint64             `protobuf:"varint,2,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	EndBlock    uint64             `protobuf:"varint,3,opt,name=end_block,json=endBlock,proto3" json:"end_block,omitempty"`
	Hash        types.HeimdallHash `protobuf:"bytes,4,opt,name=hash,proto3" json:"hash"`
	BorChainID  string             `protobuf:"bytes,5,opt,name=bor_chain_i_d,json=borChainID,proto3" json:"bor_chain_i_d,omitempty"`
	MilestoneID string             `protobuf:"bytes,6,opt,name=milestone_i_d,json=milestoneID,proto3" json:"milestone_i_d,omitempty"`
}

func (m *MsgMilestone) Reset()         { *m = MsgMilestone{} }
func (m *MsgMilestone) String() string { return proto.CompactTextString(m) }
func (*MsgMilestone) ProtoMessage()    {}
func (*MsgMilestone) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{0}
}
func (m *MsgMilestone) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMilestone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMilestone.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMilestone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMilestone.Merge(m, src)
}
func (m *MsgMilestone) XXX_Size() int {
	return m.Size()
}
func (m *MsgMilestone) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMilestone.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMilestone proto.InternalMessageInfo

func (m *MsgMilestone) GetProposer() string {
	if m != nil {
		return m.Proposer
	}
	return ""
}

func (m *MsgMilestone) GetStartBlock() uint64 {
	if m != nil {
		return m.StartBlock
	}
	return 0
}

func (m *MsgMilestone) GetEndBlock() uint64 {
	if m != nil {
		return m.EndBlock
	}
	return 0
}

func (m *MsgMilestone) GetHash() types.HeimdallHash {
	if m != nil {
		return m.Hash
	}
	return types.HeimdallHash{}
}

func (m *MsgMilestone) GetBorChainID() string {
	if m != nil {
		return m.BorChainID
	}
	return ""
}

func (m *MsgMilestone) GetMilestoneID() string {
	if m != nil {
		return m.MilestoneID
	}
	return ""
}

// MsgMilestoneResponse defines the Msg/Milestone response type.
type MsgMilestoneResponse struct {
}

func (m *MsgMilestoneResponse) Reset()         { *m = MsgMilestoneResponse{} }
func (m *MsgMilestoneResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMilestoneResponse) ProtoMessage()    {}
func (*MsgMilestoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{1}
}
func (m *MsgMilestoneResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMilestoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMilestoneResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMilestoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMilestoneResponse.Merge(m, src)
}
func (m *MsgMilestoneResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMilestoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMilestoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMilestoneResponse proto.InternalMessageInfo

// MsgMilestoneTimeout defines a SDK message to indicate that no milestone
// was proposed within the timeout period
type MsgMilestoneTimeout struct {
	From string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
}

func (m *MsgMilestoneTimeout) Reset()         { *m = MsgMilestoneTimeout{} }
func (m *MsgMilestoneTimeout) String() string { return proto.CompactTextString(m) }
func (*MsgMilestoneTimeout) ProtoMessage()    {}
func (*MsgMilestoneTimeout) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{2}
}
func (m *MsgMilestoneTimeout) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMilestoneTimeout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMilestoneTimeout.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMilestoneTimeout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMilestoneTimeout.Merge(m, src)
}
func (m *MsgMilestoneTimeout) XXX_Size() int {
	return m.Size()
}
func (m *MsgMilestoneTimeout) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMilestoneTimeout.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMilestoneTimeout proto.InternalMessageInfo

func (m *MsgMilestoneTimeout) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

// MsgMilestoneTimeoutResponse defines the Msg/MilestoneTimeout response type.
type MsgMilestoneTimeoutResponse struct {
}

func (m *MsgMilestoneTimeoutResponse) Reset()         { *m = MsgMilestoneTimeoutResponse{} }
func (m *MsgMilestoneTimeoutResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMilestoneTimeoutResponse) ProtoMessage()    {}
func (*MsgMilestoneTimeoutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{3}
}
func (m *MsgMilestoneTimeoutResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMilestoneTimeoutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMilestoneTimeoutResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMilestoneTimeoutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMilestoneTimeoutResponse.Merge(m, src)
}
func (m *MsgMilestoneTimeoutResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMilestoneTimeoutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMilestoneTimeoutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMilestoneTimeoutResponse proto.InternalMessageInfo

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless
	// overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/milestone parameters to update.
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{4}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6a004e1c418f2fa, []int{5}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgMilestone)(nil), "heimdallv2.milestone.v1.MsgMilestone")
	proto.RegisterType((*MsgMilestoneResponse)(nil), "heimdallv2.milestone.v1.MsgMilestoneResponse")
	proto.RegisterType((*MsgMilestoneTimeout)(nil), "heimdallv2.milestone.v1.MsgMilestoneTimeout")
	proto.RegisterType((*MsgMilestoneTimeoutResponse)(nil), "heimdallv2.milestone.v1.MsgMilestoneTimeoutResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "heimdallv2.milestone.v1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "heimdallv2.milestone.v1.MsgUpdateParamsResponse")
}

func init() { proto.RegisterFile("heimdallv2/milestone/v1/tx.proto", fileDescriptor_b6a004e1c418f2fa) }

var fileDescriptor_b6a004e1c418f2fa = []byte{
	// 633 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0x4d, 0x6f, 0xd3, 0x4c,
	0x10, 0xc7, 0xe3, 0x36, 0xad, 0x9a, 0x4d, 0xab, 0xe7, 0xc1, 0x54, 0xd4, 0x75, 0x55, 0x27, 0xb2,
	0x04, 0x0d, 0x11, 0xb1, 0x1b, 0xf3, 0x22, 0x11, 0x09, 0x21, 0x4c, 0x0f, 0xad, 0x44, 0xa4, 0x2a,
	0xc0, 0x85, 0x4b, 0xe4, 0xc4, 0x8b, 0x6d, 0x88, 0xbd, 0x96, 0x77, 0x13, 0x25, 0x27, 0x10, 0x27,
	0xc4, 0x89, 0x8f, 0xd0, 0x23, 0xc7, 0x1c, 0xf8, 0x10, 0xe5, 0x56, 0xc1, 0x85, 0x13, 0x42, 0xc9,
	0x21, 0x88, 0x4f, 0x81, 0xbc, 0x7e, 0xc9, 0xb6, 0x60, 0x14, 0x2e, 0x51, 0x76, 0xe6, 0xe7, 0x99,
	0xff, 0x7f, 0xc6, 0x6b, 0x50, 0xb6, 0xa1, 0xe3, 0x9a, 0x46, 0xaf, 0x37, 0xd0, 0x54, 0xd7, 0xe9,
	0x41, 0x4c, 0x90, 0x07, 0xd5, 0x41, 0x5d, 0x25, 0x43, 0xc5, 0x0f, 0x10, 0x41, 0xfc, 0xd6, 0x9c,
	0x50, 0x52, 0x42, 0x19, 0xd4, 0xc5, 0x4d, 0x0b, 0x59, 0x88, 0x32, 0x6a, 0xf8, 0x2f, 0xc2, 0xc5,
	0xed, 0x2e, 0xc2, 0x2e, 0xc2, 0xed, 0x28, 0x11, 0x1d, 0xe2, 0xd4, 0x56, 0x74, 0x52, 0x5d, 0x6c,
	0x85, 0x1d, 0x5c, 0x6c, 0xc5, 0x89, 0x4b, 0x86, 0xeb, 0x78, 0x48, 0xa5, 0xbf, 0x71, 0x68, 0x87,
	0xd1, 0x45, 0x46, 0x3e, 0xc4, 0xaa, 0x6d, 0x60, 0x3b, 0x4e, 0xee, 0x65, 0x89, 0x9e, 0xeb, 0xa3,
	0xa0, 0xfc, 0x73, 0x09, 0xac, 0x37, 0xb1, 0xd5, 0x4c, 0xc2, 0xfc, 0x5d, 0xb0, 0xe6, 0x07, 0xc8,
	0x47, 0x18, 0x06, 0x02, 0x57, 0xe6, 0x2a, 0x05, 0x7d, 0xf7, 0xf3, 0xc7, 0xda, 0x66, 0x2c, 0xf3,
	0x81, 0x69, 0x06, 0x10, 0xe3, 0xc7, 0x24, 0x70, 0x3c, 0xeb, 0xc3, 0x6c, 0x5c, 0xe5, 0x5a, 0x29,
	0xce, 0x5f, 0x03, 0x45, 0x4c, 0x8c, 0x80, 0xb4, 0x3b, 0x3d, 0xd4, 0x7d, 0x29, 0x2c, 0x95, 0xb9,
	0x4a, 0x5e, 0x5f, 0x89, 0x28, 0x40, 0x33, 0x7a, 0x98, 0xe0, 0x65, 0x50, 0x80, 0x9e, 0x19, 0x53,
	0xcb, 0x2c, 0xb5, 0x06, 0x3d, 0x33, 0x62, 0xee, 0x81, 0x7c, 0x68, 0x47, 0xc8, 0x97, 0xb9, 0x4a,
	0x51, 0x93, 0x14, 0x66, 0xc4, 0xd4, 0xac, 0x72, 0x18, 0x07, 0x0e, 0x0d, 0x6c, 0xeb, 0x85, 0xd3,
	0x6f, 0xa5, 0x5c, 0x54, 0x82, 0x3e, 0xc6, 0x57, 0xc0, 0x46, 0x07, 0x05, 0xed, 0xae, 0x6d, 0x38,
	0x5e, 0xdb, 0x69, 0x9b, 0xc2, 0x0a, 0xb5, 0x92, 0x88, 0xe9, 0xa0, 0xe0, 0x61, 0x98, 0x3a, 0x3a,
	0xe0, 0xaf, 0x83, 0x8d, 0x74, 0x26, 0x94, 0x5c, 0x65, 0xc9, 0x62, 0x9a, 0x3b, 0x3a, 0x68, 0xdc,
	0x7f, 0x7b, 0x52, 0xe2, 0x7e, 0x9c, 0x94, 0xb8, 0x37, 0xb3, 0x71, 0x35, 0xb5, 0x7d, 0xee, 0xf0,
	0x6e, 0x36, 0xae, 0x0a, 0x89, 0xd6, 0xda, 0x40, 0x53, 0xd9, 0xd9, 0xca, 0x57, 0xc0, 0x26, 0x7b,
	0x6e, 0x41, 0xec, 0x23, 0x0f, 0x43, 0xf9, 0x15, 0xb8, 0xcc, 0xc6, 0x9f, 0x38, 0x2e, 0x44, 0x7d,
	0xc2, 0xd7, 0x41, 0xfe, 0x79, 0x80, 0xdc, 0xc5, 0xd6, 0x40, 0xd1, 0xc6, 0x6d, 0x56, 0x22, 0x0d,
	0x85, 0x8a, 0x4a, 0x59, 0x8a, 0xe2, 0x4e, 0xf2, 0x2e, 0xd8, 0xf9, 0x43, 0x38, 0xd5, 0xf7, 0x89,
	0x03, 0xff, 0x35, 0xb1, 0xf5, 0xd4, 0x37, 0x0d, 0x02, 0x8f, 0x8d, 0xc0, 0x70, 0x31, 0x7f, 0x07,
	0x14, 0x8c, 0x3e, 0xb1, 0x51, 0xe0, 0x90, 0x51, 0xac, 0x50, 0xc8, 0x52, 0xd8, 0x9a, 0xa3, 0xbc,
	0x0e, 0x56, 0x7d, 0x5a, 0x81, 0xbe, 0x1f, 0x45, 0xad, 0xa4, 0x64, 0xdc, 0x1e, 0x25, 0x6a, 0xc4,
	0xee, 0x36, 0x7e, 0xb2, 0xd1, 0x08, 0xdd, 0xcd, 0x6b, 0x86, 0x16, 0xf7, 0x58, 0x8b, 0x43, 0xe6,
	0x9d, 0xbf, 0xa0, 0x5b, 0xde, 0x06, 0x5b, 0x17, 0x42, 0x89, 0x4d, 0xed, 0xcb, 0x12, 0x58, 0x6e,
	0x62, 0x8b, 0x37, 0x40, 0x61, 0x7e, 0x1f, 0xae, 0x66, 0xea, 0x63, 0x27, 0x26, 0xd6, 0x16, 0xc2,
	0x92, 0x56, 0xfc, 0x00, 0xfc, 0xff, 0xdb, 0xba, 0x6f, 0x2c, 0x54, 0x22, 0xa6, 0xc5, 0x5b, 0xff,
	0x42, 0xa7, 0x7d, 0x5f, 0x80, 0xf5, 0x73, 0x5b, 0xac, 0xfc, 0xad, 0x0a, 0x4b, 0x8a, 0xfb, 0x8b,
	0x92, 0x49, 0x2f, 0x71, 0xe5, 0x75, 0xb8, 0x34, 0xfd, 0xd1, 0xe9, 0x44, 0xe2, 0xce, 0x26, 0x12,
	0xf7, 0x7d, 0x22, 0x71, 0xef, 0xa7, 0x52, 0xee, 0x6c, 0x2a, 0xe5, 0xbe, 0x4e, 0xa5, 0xdc, 0x33,
	0xcd, 0x72, 0x88, 0xdd, 0xef, 0x28, 0x5d, 0xe4, 0xaa, 0xfb, 0xc3, 0x63, 0xd4, 0x1b, 0x59, 0xc8,
	0x53, 0xb3, 0x16, 0x49, 0xaf, 0x7d, 0x67, 0x95, 0x7e, 0xb6, 0x6e, 0xfe, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xa9, 0x66, 0x0b, 0xf2, 0x96, 0x05, 0x00, 0x00,
}

func (this *MsgMilestone) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgMilestone)
	if !ok {
		that2, ok := that.(MsgMilestone)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.Proposer != that1.Proposer {
		return false
	}
	if this.StartBlock != that1.StartBlock {
		return false
	}
	if this.EndBlock != that1.EndBlock {
		return false
	}
	if !this.Hash.Equal(&that1.Hash) {
		return false
	}
	if this.BorChainID != that1.BorChainID {
		return false
	}
	if this.MilestoneID != that1.MilestoneID {
		return false
	}
	return true
}
func (this *MsgMilestoneTimeout) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*MsgMilestoneTimeout)
	if !ok {
		that2, ok := that.(MsgMilestoneTimeout)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.From != that1.From {
		return false
	}
	return true
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// Milestone defines a method for sending a milestone which
	// finalizes a range of bor blocks
	Milestone(ctx context.Context, in *MsgMilestone, opts ...grpc.CallOption) (*MsgMilestoneResponse, error)
	// MilestoneTimeout defines a method to indicate that no milestone
	// was proposed within the timeout period
	MilestoneTimeout(ctx context.Context, in *MsgMilestoneTimeout, opts ...grpc.CallOption) (*MsgMilestoneTimeoutResponse, error)
	// UpdateParams defines an operation for updating the x/milestone module
	// parameters.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) Milestone(ctx context.Context, in *MsgMilestone, opts ...grpc.CallOption) (*MsgMilestoneResponse, error) {
	out := new(MsgMilestoneResponse)
	err := c.cc.Invoke(ctx, "/heimdallv2.milestone.v1.Msg/Milestone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MilestoneTimeout(ctx context.Context, in *MsgMilestoneTimeout, opts ...grpc.CallOption) (*MsgMilestoneTimeoutResponse, error) {
	out := new(MsgMilestoneTimeoutResponse)
	err := c.cc.Invoke(ctx, "/heimdallv2.milestone.v1.Msg/MilestoneTimeout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/heimdallv2.milestone.v1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// Milestone defines a method for sending a milestone which
	// finalizes a range of bor blocks
	Milestone(context.Context, *MsgMilestone) (*MsgMilestoneResponse, error)
	// MilestoneTimeout defines a method to indicate that no milestone
	// was proposed within the timeout period
	MilestoneTimeout(context.Context, *MsgMilestoneTimeout) (*MsgMilestoneTimeoutResponse, error)
	// UpdateParams defines an operation for updating the x/milestone module
	// parameters.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) Milestone(ctx context.Context, req *MsgMilestone) (*MsgMilestoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Milestone not implemented")
}
func (*UnimplementedMsgServer) MilestoneTimeout(ctx context.Context, req *MsgMilestoneTimeout) (*MsgMilestoneTimeoutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MilestoneTimeout not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_Milestone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMilestone)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Milestone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallv2.milestone.v1.Msg/Milestone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Milestone(ctx, req.(*MsgMilestone))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MilestoneTimeout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMilestoneTimeout)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MilestoneTimeout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallv2.milestone.v1.Msg/MilestoneTimeout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MilestoneTimeout(ctx, req.(*MsgMilestoneTimeout))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heimdallv2.milestone.v1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heimdallv2.milestone.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Milestone",
			Handler:    _Msg_Milestone_Handler,
		},
		{
			MethodName: "MilestoneTimeout",
			Handler:    _Msg_MilestoneTimeout_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "heimdallv2/milestone/v1/tx.proto",
}

func (m *MsgMilestone) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMilestone) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMilestone) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MilestoneID) > 0 {
		i -= len(m.MilestoneID)
		copy(dAtA[i:], m.MilestoneID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MilestoneID)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BorChainID) > 0 {
		i -= len(m.BorChainID)
		copy(dAtA[i:], m.BorChainID)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BorChainID)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Hash.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if m.EndBlock != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.EndBlock))
		i--
		dAtA[i] = 0x18
	}
	if m.StartBlock != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.StartBlock))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Proposer) > 0 {
		i -= len(m.Proposer)
		copy(dAtA[i:], m.Proposer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Proposer)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMilestoneResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMilestoneResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMilestoneResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMilestoneTimeout) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMilestoneTimeout) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMilestoneTimeout) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMilestoneTimeoutResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMilestoneTimeoutResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMilestoneTimeoutResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgMilestone) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Proposer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.StartBlock != 0 {
		n += 1 + sovTx(uint64(m.StartBlock))
	}
	if m.EndBlock != 0 {
		n += 1 + sovTx(uint64(m.EndBlock))
	}
	l = m.Hash.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.BorChainID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MilestoneID)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMilestoneResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMilestoneTimeout) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMilestoneTimeoutResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgMilestone) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMilestone: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMilestone: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proposer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proposer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartBlock", wireType)
			}
			m.StartBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndBlock", wireType)
			}
			m.EndBlock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndBlock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hash", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Hash.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BorChainID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BorChainID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MilestoneID", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MilestoneID = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMilestoneResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMilestoneResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMilestoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMilestoneTimeout) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMilestoneTimeout: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMilestoneTimeout: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMilestoneTimeoutResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMilestoneTimeoutResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMilestoneTimeoutResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
