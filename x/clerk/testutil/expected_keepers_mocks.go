// Code generated by MockGen. DO NOT EDIT.
// Source: x/clerk/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	context "context"
	reflect "reflect"

	types "github.com/0xPolygon/heimdall-v2/x/chainmanager/types"
	gomock "github.com/golang/mock/gomock"
)

// MockChainKeeper is a mock of ChainKeeper interface.
type MockChainKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockChainKeeperMockRecorder
}

// MockChainKeeperMockRecorder is the mock recorder for MockChainKeeper.
type MockChainKeeperMockRecorder struct {
	mock *MockChainKeeper
}

// NewMockChainKeeper creates a new mock instance.
func NewMockChainKeeper(ctrl *gomock.Controller) *MockChainKeeper {
	mock := &MockChainKeeper{ctrl: ctrl}
	mock.recorder = &MockChainKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockChainKeeper) EXPECT() *MockChainKeeperMockRecorder {
	return m.recorder
}

// GetParams mocks base method.
func (m *MockChainKeeper) GetParams(ctx context.Context) (types.Params, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetParams", ctx)
	ret0, _ := ret[0].(types.Params)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetParams indicates an expected call of GetParams.
func (mr *MockChainKeeperMockRecorder) GetParams(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetParams", reflect.TypeOf((*MockChainKeeper)(nil).GetParams), ctx)
}
