// Code generated by MockGen. DO NOT EDIT.
// Source: x/checkpoint/types/expected_keepers.go

// Package testutil is a generated GoMock package.
package testutil

import (
	context "context"
	reflect "reflect"

	types "github.com/0xPolygon/heimdall-v2/types"
	gomock "github.com/golang/mock/gomock"
)

// MockTopupKeeper is a mock of TopupKeeper interface.
type MockTopupKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockTopupKeeperMockRecorder
}

// MockTopupKeeperMockRecorder is the mock recorder for MockTopupKeeper.
type MockTopupKeeperMockRecorder struct {
	mock *MockTopupKeeper
}

// NewMockTopupKeeper creates a new mock instance.
func NewMockTopupKeeper(ctrl *gomock.Controller) *MockTopupKeeper {
	mock := &MockTopupKeeper{ctrl: ctrl}
	mock.recorder = &MockTopupKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTopupKeeper) EXPECT() *MockTopupKeeperMockRecorder {
	return m.recorder
}

// GetAllDividendAccounts mocks base method.
func (m *MockTopupKeeper) GetAllDividendAccounts(ctx context.Context) []types.DividendAccount {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllDividendAccounts", ctx)
	ret0, _ := ret[0].([]types.DividendAccount)
	return ret0
}

// GetAllDividendAccounts indicates an expected call of GetAllDividendAccounts.
func (mr *MockTopupKeeperMockRecorder) GetAllDividendAccounts(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllDividendAccounts", reflect.TypeOf((*MockTopupKeeper)(nil).GetAllDividendAccounts), ctx)
}
